{"version":3,"file":"static/js/60.d0072747.chunk.js","mappings":"yLACA,EAAyB,uBAAzB,EAAsD,oB,UC6BtD,EA5Bc,CACV,CACIA,IAAIC,EAAAA,EAAAA,MACJC,GAAI,IACJC,KAAM,QAEV,CACIH,IAAIC,EAAAA,EAAAA,MACJC,GAAI,SACJC,KAAM,SAEV,CACIH,IAAIC,EAAAA,EAAAA,MACJC,GAAI,YACJC,KAAM,YAEV,CACIH,IAAIC,EAAAA,EAAAA,MACJC,GAAI,qBACJC,KAAM,qBAEV,CACIH,IAAIC,EAAAA,EAAAA,MACJC,GAAI,YACJC,KAAM,aCzBd,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA2F,4B,SCGrFC,EAAe,SAAC,GAClB,OADiC,EAAdC,SACJ,UAAMC,EAAN,YAAqBA,GAArB,UAA0CA,EAC5D,EAEc,SAASC,IACtB,IAAMC,EAAWC,EAAAA,KAAU,YAAqB,IAAnBT,EAAkB,EAAlBA,GAAIE,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACnC,OAAID,EAAGQ,SAAS,cAEV,yBACI,SAAC,KAAD,CAASC,UAAWP,EAAcF,GAAIA,EAAtC,SAA2CC,KADtCH,IAMX,yBACI,SAAC,KAAD,CAASW,UAAWP,EAAcF,GAAIA,EAAIU,KAAG,EAA7C,SAA+CT,KAD1CH,EAId,IAED,OACE,eAAIW,UAAWL,EAAf,SACEE,GAGL,CCzBc,SAASK,IACtB,OACE,gBAAKF,UAAWL,EAAhB,UACI,gBAAKK,UAAU,YAAf,UACI,iBAAKA,UAAWL,EAAhB,WACC,SAAC,KAAD,CAAMJ,GAAG,IAAT,mBACA,SAACK,EAAD,KACA,0CAKZ,C,cCXc,SAASO,IACtB,OACM,iCACI,SAACD,EAAD,KACA,SAAC,EAAAE,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,OAEF,sDAGX,C,wDCdM,IAkBIf,EAAS,eAACgB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACrB,EAAIsB,GAWvD,OAREtB,IAFFsB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://react-router-1/./src/components/Navbar/navbar.module.scss?1283","components/Navbar/NavbarMenu/items.js","webpack://react-router-1/./src/components/Navbar/NavbarMenu/navbar-menu.module.scss?9281","components/Navbar/NavbarMenu/NavbarMenu.jsx","components/Navbar/Navbar.jsx","components/SharedLayout/SharedLayout.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"navbar\":\"navbar_navbar__1uzBk\",\"row\":\"navbar_row__v3Dnz\"};","import {nanoid} from 'nanoid';\r\n\r\nconst items = [\r\n    {\r\n        id: nanoid(),\r\n        to: \"/\",\r\n        text: \"Home\"\r\n    },\r\n    {\r\n        id: nanoid(),\r\n        to: \"/posts\",\r\n        text: \"Posts\"\r\n    },\r\n    {\r\n        id: nanoid(),\r\n        to: \"/my-books\",\r\n        text: \"My Books\"\r\n    },\r\n    {\r\n        id: nanoid(),\r\n        to: \"/my-favorite-books\",\r\n        text: \"My Favorite Books\"\r\n    },\r\n    {\r\n        id: nanoid(),\r\n        to: \"/products\",\r\n        text: \"Products\"\r\n    },\r\n];\r\n\r\nexport default items;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"navbar-menu_menu__roM83\",\"link\":\"navbar-menu_link__a0K-x\",\"active\":\"navbar-menu_active__Ooy4T\"};","import { NavLink } from \"react-router-dom\";\r\nimport items from \"./items\";\r\nimport styles from \"./navbar-menu.module.scss\";\r\n\r\nconst getClassName = ({isActive}) => {\r\n    return isActive ? `${styles.link} ${styles.active}` : `${styles.link}`;\r\n}\r\n\r\nexport default function NavbarMenu() {\r\n  const elements = items.map(({id, to, text}) => {\r\n    if (to.includes(\"/products\")) {\r\n      return (\r\n          <li key={id}>\r\n              <NavLink className={getClassName} to={to}>{text}</NavLink>\r\n          </li>\r\n      )\r\n    }\r\n    return (\r\n        <li key={id}>\r\n            <NavLink className={getClassName} to={to} end>{text}</NavLink>\r\n        </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className={styles.menu}>\r\n     {elements}   \r\n    </ul>\r\n  )\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styles from './navbar.module.scss';\r\nimport NavbarMenu from \"./NavbarMenu/NavbarMenu\";\r\n\r\nexport default function Navbar() {\r\n  return (\r\n    <nav className={styles.navbar}>\r\n        <div className=\"container\">\r\n            <div className={styles.row}>\r\n             <Link to=\"/\">Logo</Link>\r\n             <NavbarMenu />\r\n             <span>Cart:</span>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport Navbar from \"../Navbar/Navbar\"\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\n\r\nexport default function SharedLayout() {\r\n  return (\r\n        <>\r\n            <Navbar />\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n              <Outlet />\r\n            </Suspense>\r\n            <footer>Copyright 2022 &copy;</footer>\r\n        </>\r\n  )\r\n}\r\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["id","nanoid","to","text","getClassName","isActive","styles","NavbarMenu","elements","items","includes","className","end","Navbar","SharedLayout","Suspense","fallback","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}