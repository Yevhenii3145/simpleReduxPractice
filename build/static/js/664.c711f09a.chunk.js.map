{"version":3,"file":"static/js/664.c711f09a.chunk.js","mappings":"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","sources":["webpack://react-router-1/./src/shared/components/SubmitButton/submit-button.module.scss?faf4","shared/components/SubmitButton/SubmitButton.jsx","components/PostsSearch/PostsSearchForm/initialState.js","components/PostsSearch/PostsSearchForm/fields.js","webpack://react-router-1/./src/components/PostsSearch/PostsSearchForm/posts-search-form.module.scss?bde3","components/PostsSearch/PostsSearchForm/PostsSearchForm.jsx","webpack://react-router-1/./src/shared/components/Modal/modal.module.scss?c80f","shared/components/Modal/Modal.jsx","webpack://react-router-1/./src/components/PostsSearch/posts-search.module.scss?4896","components/PostsSearch/PostsSearch.jsx","pages/PostsPage/PostsPage.jsx","shared/api/posts.js","webpack://react-router-1/./src/shared/components/PostList/post-list.module.scss?60f6","shared/components/PostList/PostList.jsx","webpack://react-router-1/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"submit-button_btn__EY4wu\"};","import styles from \"./submit-button.module.scss\";\r\n\r\nconst SubmitButton = ({text, onClick}) => {\r\n    return (\r\n        <button onClick={onClick} className={styles.btn}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default SubmitButton;","const initialState = {\r\n    search: \"\"\r\n}\r\n\r\nexport default initialState;\r\n","const fields = {\r\n    search: {\r\n        label: \"Search\",\r\n        type: \"text\",\r\n        name: \"search\",\r\n        placeholder: \"Enter search text\",\r\n        required: true,\r\n    }\r\n}\r\n\r\nexport default fields;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"posts-search-form_form__VBzvQ\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport TextField from \"../../../shared/components/TextField/TextField\";\r\nimport SubmitButton from './../../../shared/components/SubmitButton/SubmitButton';\r\n\r\nimport initialState from \"./initialState\";\r\nimport fields from \"./fields\";\r\n\r\nimport styles from \"./posts-search-form.module.scss\";\r\n\r\nconst PostsSearchForm = ({onSubmit}) => {\r\n    const [state, setState] = useState({...initialState});\r\n\r\n    const handleChange = ({target}) => {\r\n        const {value, name} = target;\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [name]: value,\r\n        }))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        onSubmit({...state});\r\n        setState({...initialState})\r\n    }\r\n\r\n    const {search} = state;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n            <TextField value={search} handleChange={handleChange} {...fields.search} />\r\n            <SubmitButton text=\"Search\" />\r\n        </form>\r\n    )\r\n}\r\n/*\r\nclass PostsSearchForm extends Component {\r\n\r\n    static defaultProps = {\r\n        onSubmit: () => {}\r\n    }\r\n\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func,\r\n    }\r\n\r\n    state = {...initialState}\r\n\r\n    searchId = nanoid()\r\n\r\n    handleChange = ({target}) => {\r\n        const {value, name} = target;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {onSubmit} = this.props;\r\n        onSubmit({...this.state});\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.setState({...initialState})\r\n    }\r\n\r\n    render() {\r\n        const {handleChange, handleSubmit, searchId} = this;\r\n        const {search} = this.state;\r\n\r\n        return (\r\n            <form onSubmit={handleSubmit} className={styles.form}>\r\n                <TextField value={search} id={searchId} handleChange={handleChange} {...fields.search} />\r\n                <SubmitButton text=\"Search\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n*/\r\nexport default PostsSearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"modal_overlay__3wui5\",\"modal\":\"modal_modal__dzO40\",\"close\":\"modal_close__pw1mf\"};","import { useEffect } from \"react\";\r\nimport {createPortal} from \"react-dom\";\r\n\r\nimport styles from \"./modal.module.scss\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nconst Modal = ({close, children}) => {\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"keydown\", closeModal);\r\n        \r\n        return () => document.removeEventListener(\"keydown\", closeModal)\r\n    }, []);\r\n\r\n    const closeModal = ({target, currentTarget, code}) => {\r\n        if(target === currentTarget || code === \"Escape\") {\r\n            close()\r\n        }\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={styles.overlay} onClick={closeModal}>\r\n            <div className={styles.modal}>\r\n                <span onClick={closeModal} className={styles.close}>X</span>\r\n                {children}\r\n            </div>\r\n        </div>,\r\n        modalRoot\r\n    )\r\n}\r\n\r\n/*\r\nclass Modal extends Component {\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.closeModal)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"keydown\", this.closeModal)\r\n    }\r\n\r\n    closeModal = ({target, currentTarget, code}) => {\r\n        if(target === currentTarget || code === \"Escape\") {\r\n            this.props.close()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {closeModal} = this;\r\n        const {children} = this.props;\r\n\r\n        return createPortal(\r\n            <div className={styles.overlay} onClick={closeModal}>\r\n                <div className={styles.modal}>\r\n                    <span onClick={closeModal} className={styles.close}>X</span>\r\n                    {children}\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n    }\r\n}\r\n*/\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"postTitle\":\"posts-search_postTitle__FxQQj\",\"postContent\":\"posts-search_postContent__+f2IS\"};","import { useState, useEffect, useMemo} from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport PostsSearchForm from \"./PostsSearchForm/PostsSearchForm\";\r\nimport PostList from \"./../../shared/components/PostList/PostList\";\r\nimport Modal from \"../../shared/components/Modal/Modal\";\r\n\r\nimport { searchPosts } from \"../../shared/api/posts\";\r\n\r\nimport styles from \"./posts-search.module.scss\";\r\n\r\nconst modalInitialState = {\r\n    title: \"\",\r\n    body: \"\"\r\n}\r\n\r\nconst PostsSearch = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [page, setPage] = useState(1);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [modalContent, setModalContent] = useState({...modalInitialState});\r\n\r\n    \r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const searchQuery = searchParams.get(\"searchQuery\");\r\n\r\n    // const params = useMemo(\r\n    //     () => Object.fromEntries([...searchParams]),\r\n    //     [searchParams]\r\n    //     );\r\n    //     console.log(params);\r\n\r\n    useEffect(()=> {\r\n        const fetchPosts = async () =>  {        \r\n            try {\r\n                setLoading(true);\r\n                const data = await searchPosts(searchQuery, page);\r\n                setItems(prevItems => [...prevItems, ...data])\r\n            } catch (error) {\r\n                setError(error);\r\n            }\r\n            finally {\r\n                setLoading(false);\r\n            }\r\n          }\r\n          if(searchQuery) {\r\n            fetchPosts()\r\n          }    \r\n    }, [searchQuery, page]);\r\n\r\n    const onSearch = ({search}) => {\r\n        setSearchParams({searchQuery: search});\r\n        setPage(1);\r\n        setItems([])\r\n    }\r\n\r\n    const loadMore = () => setPage(prevPage => prevPage + 1);\r\n\r\n    const openModal = (modalContent) => {\r\n        setModalOpen(true);\r\n        setModalContent({...modalContent});\r\n    }\r\n\r\n    const closeModal = ()=> {\r\n        setModalOpen(false);\r\n        setModalContent({...modalInitialState});\r\n    }\r\n\r\n    const isPosts = Boolean(items.length);\r\n\r\n    return (\r\n        <div>\r\n            {modalOpen && (<Modal close={closeModal}>\r\n                <h3 className={styles.postTitle}>{modalContent.title}</h3>\r\n                <p className={styles.postContent}>{modalContent.body}</p>\r\n            </Modal>)}\r\n            <PostsSearchForm onSubmit={onSearch} />\r\n            {isPosts && <PostList items={items} onClick={openModal} />}\r\n            {loading && <p>....Loading posts</p>}\r\n            {error && <p>Не удалось загрузить посты</p>}\r\n            {isPosts && <button onClick={loadMore}>load more</button>}\r\n        </div>\r\n    )\r\n\r\n}\r\n/*\r\nclass PostsSearch extends Component {\r\n\r\n    state = {\r\n        items: [],\r\n        loading: false,\r\n        error: null,\r\n        search: \"\",\r\n        page: 1,\r\n        modalOpen: false,\r\n        modalContent: {\r\n            title: \"\",\r\n            body: \"\",\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(_, prevState) {\r\n        const {search, page} = this.state;\r\n        if((search && prevState.search !== search) || page > prevState.page) {\r\n            this.fetchPosts();\r\n        }\r\n    }\r\n\r\n    async fetchPosts() {\r\n        const {search, page} = this.state;\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n    \r\n        try {\r\n            const data = await searchPosts(search, page);\r\n            this.setState(({items}) => ({\r\n                items: [...items, ...data]\r\n            }))\r\n        } catch (error) {\r\n            this.setState({\r\n                error,\r\n            })\r\n        }\r\n        finally {\r\n            this.setState({ loading: false })\r\n        }\r\n      }\r\n\r\n    onSearch = ({search}) => {\r\n        this.setState({\r\n            search,\r\n        })\r\n    }\r\n\r\n    loadMore = () => {\r\n        this.setState(({page}) => ({\r\n            page: page + 1\r\n        }))\r\n    }\r\n\r\n    openModal = (modalContent) => {\r\n        this.setState({\r\n            modalOpen: true,\r\n            modalContent,\r\n        })\r\n    }\r\n\r\n    closeModal = ()=> {\r\n        this.setState({\r\n            modalOpen: false,\r\n            modalContent: {\r\n                title: \"\",\r\n                body: \"\",\r\n            }\r\n        })\r\n    }\r\n \r\n    render(){\r\n        const {onSearch, loadMore, openModal, closeModal} = this;\r\n        const {items, loading, error, modalOpen, modalContent} = this.state;\r\n\r\n        const isPosts = Boolean(items.length);\r\n\r\n        return (\r\n            <div>\r\n                {modalOpen && (<Modal close={closeModal}>\r\n                    <h3 className={styles.postTitle}>{modalContent.title}</h3>\r\n                    <p className={styles.postContent}>{modalContent.body}</p>\r\n                </Modal>)}\r\n                <PostsSearchForm onSubmit={onSearch} />\r\n                {isPosts && <PostList items={items} onClick={openModal} />}\r\n                {loading && <p>....Loading posts</p>}\r\n                {error && <p>Не удалось загрузить посты</p>}\r\n                {isPosts && <button onClick={loadMore}>load more</button>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/\r\nexport default PostsSearch;\r\n","import PostsSearch from \"../../components/PostsSearch/PostsSearch\";\r\n\r\nexport default function PostsPage() {\r\n  return (\r\n    <>\r\n      <div>Posts Page</div>\r\n      <PostsSearch />\r\n    </>\r\n  )\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com/posts\",\r\n    params: {\r\n        _limit: 12,\r\n    }\r\n});\r\n\r\nexport const getPosts = async(_page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const getPostById = async(id) => {\r\n    const { data } = await instance.get(`/${id}`);\r\n    return data;\r\n}\r\n\r\nexport const searchPosts = async(q, _page = 1) => {\r\n    const {data} = await instance.get(\"/\", {\r\n        params: {\r\n            _page,\r\n            q,\r\n        }\r\n    });\r\n    return data;\r\n}\r\n\r\nexport const getCommentsById = async (id) => {\r\n    const { data } = await instance.get(`/${id}/comments`);\r\n    return data;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"post-list_list__FC7u5\",\"item\":\"post-list_item__Gfl6p\"};","import styles from \"./post-list.module.scss\";\r\nimport { Link, useLocation } from \"react-router-dom\"\r\n\r\nconst PostList = ({items}) => {\r\n    const location = useLocation();\r\n    console.log('location in postlist', location);\r\n    const elements = items.map(({ id, title }) => (<li key={id} className={styles.item}>\r\n            <Link state={{from: location}} to={`/posts/${id}`}>{title}</Link>\r\n        </li>));\r\n\r\n    return <ul className={styles.list}>{elements}</ul>\r\n}\r\n\r\nexport default PostList;\r\n\r\nPostList.defaultProps = {\r\n    items: []\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"text-field_formGroup__wQAcd\",\"field\":\"text-field_field__gzYPx\"};","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./text-field.module.css\";\r\n\r\nconst TextField = ({id, label, value, name, handleChange, type, checked, className, placeholder, required, pattern}) => {\r\n    const fullClassName = className ? `${styles.field} ${className}` : styles.field;\r\n\r\n    return (\r\n        <div className={styles.formGroup}>\r\n            {label && <label htmlFor={id}>{label}</label>}\r\n            <input id={id} value={value} checked={checked} name={name} onChange={handleChange} type={type} className={fullClassName} placeholder={placeholder} required={required} pattern={pattern} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextField;\r\n\r\nTextField.defaultProps = {\r\n    type: \"text\",\r\n    required: false,\r\n}\r\n\r\nTextField.propTypes = {\r\n    id: PropTypes.string, \r\n    label: PropTypes.string, \r\n    // value: PropTypes.string, \r\n    name: PropTypes.string.isRequired, \r\n    handleChange: PropTypes.func.isRequired, \r\n    type: PropTypes.string, \r\n    className: PropTypes.string, \r\n    placeholder: PropTypes.string,  \r\n    required: PropTypes.bool, \r\n    pattern: PropTypes.string,\r\n}"],"names":["text","onClick","className","styles","search","label","type","name","placeholder","required","onSubmit","useState","initialState","state","setState","e","preventDefault","TextField","value","handleChange","target","prevState","fields","modalRoot","document","getElementById","close","children","useEffect","addEventListener","closeModal","removeEventListener","currentTarget","code","createPortal","modalInitialState","title","body","items","setItems","loading","setLoading","error","setError","page","setPage","modalOpen","setModalOpen","modalContent","setModalContent","useSearchParams","searchParams","setSearchParams","searchQuery","get","fetchPosts","searchPosts","data","prevItems","isPosts","Boolean","length","PostList","prevPage","PostsPage","instance","axios","baseURL","params","_limit","getPosts","_page","getPostById","id","q","getCommentsById","location","useLocation","console","log","elements","map","from","to","defaultProps","checked","pattern","fullClassName","htmlFor","onChange"],"sourceRoot":""}